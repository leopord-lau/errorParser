(()=>{"use strict";function createStackFrame(e,n,t,a){const c={url:e,function:n};return void 0!==t&&(c.lineno=t),void 0!==a&&(c.colno=a),c}(function createStackParser(e){const n=[];return t=>{const a=t.stack.split("\n");for(let t=0;t<a.length;t++){const c=a[t];if(c.length>1024)return;for(let t=0;t<e.length;t++){const a=e[t](c);if(a){n.push(a);break}}if(n.length>=50)break}return{name:t.name,message:t.message,stack:n}}})([e=>{const n=/\((\S*)(?::(\d+))(?::(\d+))\)/,t=/^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i.exec(e);if(t){if(t[2]&&0===t[2].indexOf("eval")){const e=n.exec(t[2]);console.log(e),e&&(t[2]=e[1],t[3]=e[2],t[4]=e[3])}return createStackFrame(t[2],t[1]||"?",t[3]?+t[3]:void 0,t[4]?+t[4]:void 0)}},e=>{const n=/(\S+) line (\d+)(?: > eval line \d+)* > eval/i,t=/^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i.exec(e);if(t){if(t[3]&&t[3].indexOf(" > eval")>-1){const e=n.exec(t[3]);e&&(t[1]=t[1]||"eval",t[3]=e[1],t[4]=e[2],t[5]="")}return createStackFrame(t[3],t[1]||"?",t[4]?+t[4]:void 0,t[5]?+t[5]:void 0)}}])})();